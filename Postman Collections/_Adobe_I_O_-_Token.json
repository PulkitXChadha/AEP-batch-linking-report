{
  "info": {
    "_postman_id": "fe70d57f-a577-4609-96d7-0ec71e15ec94",
    "name": "_Adobe I/O - Token",
    "description": "Example calls to use JWT integration and authentication in Adobe I/O\n\nThis is part of the corresponding article written for the Adobe I/O blog.\n\nContact: ktukker@adobe.com",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "INIT: Load Crypto Library for RS256",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "824e628b-b420-417b-894b-417ab6412896",
            "exec": [
              "postman.setGlobalVariable(\"jsrsasign-js\", responseBody);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "532cde30-1e5f-4ed1-90fe-abf29030ddf0",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "url": "http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js",
        "description": "Load the RSA-Sign Crypto LIbrary in a global environment variable\n\nSource: http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js\n\nGithub: https://github.com/kjur/jsrsasign"
      },
      "response": []
    },
    {
      "name": "IMS: JWT Generate + Auth",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "83c6252e-0b50-4468-8cfb-ccccfb57030a",
            "exec": [
              "var data = JSON.parse(responseBody);",
              "postman.setEnvironmentVariable(\"ACCESS_TOKEN\", data.access_token);"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "f067b81f-65d2-4672-ae41-0ff1338d25f6",
            "exec": [
              "// Tips from: https://github.com/kjur/jsrsasign/issues/199",
              "// https://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWT-generation",
              "",
              "var navigator = {}; //fake a navigator object for the lib",
              "var window = {}; //fake a window object for the lib",
              "eval(postman.getGlobalVariable(\"jsrsasign-js\")); //import javascript jsrsasign",
              "",
              "",
              "var header = {",
              "\t\"alg\": \"RS256\"",
              "};",
              "",
              "var data = {",
              "\t\"exp\": Math.round(87000 + Date.now() / 1000),",
              "\t\"iss\": postman.getEnvironmentVariable(\"IMS_ORG\"),",
              "\t\"sub\": postman.getEnvironmentVariable(\"TECHNICAL_ACCOUNT_ID\"),",
              "\t\"aud\": \"https://\" + postman.getEnvironmentVariable(\"IMS\") + \"/c/\" + postman.getEnvironmentVariable(\"API_KEY\")",
              "};",
              "",
              "//console.log(postman.getEnvironmentVariable(\"META_SCOPE\"));",
              "meta_scopes = postman.getEnvironmentVariable(\"META_SCOPE\").split(',');",
              "meta_scopes.forEach(function (scope) {",
              "\tvar meta_scope = \"https://\" + postman.getEnvironmentVariable(\"IMS\") + \"/s/\" +",
              "\t\tscope;",
              "\tdata[meta_scope] = true;",
              "});",
              "",
              "var secret = postman.getEnvironmentVariable(\"PRIVATE_KEY\");",
              "",
              "var sHeader = JSON.stringify(header);",
              "var sPayload = JSON.stringify(data);",
              "var sJWT = KJUR.jws.JWS.sign(\"RS256\", sHeader, sPayload, secret);",
              "",
              "console.log(sPayload);",
              "console.log(sJWT);",
              "",
              "postman.setEnvironmentVariable(\"JWT_TOKEN\", sJWT);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "a5a3cafe-f9ff-4735-a0da-913e35b8e861",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "client_id",
              "value": "{{API_KEY}}",
              "type": "text"
            },
            {
              "key": "client_secret",
              "value": "{{CLIENT_SECRET}}",
              "type": "text"
            },
            {
              "key": "jwt_token",
              "value": "{{JWT_TOKEN}}",
              "type": "text"
            }
          ],
          "options": {
            "formdata": {}
          }
        },
        "url": "https://{{IMS}}/ims/exchange/jwt/",
        "description": "Generate a JWT token using the Crypto RS256\nSend to IMS for access_token"
      },
      "response": []
    }
  ]
}